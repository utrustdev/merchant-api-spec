swagger: '2.0'
schemes:
  - https
host: api.utrust.com
basePath: /
info:
  description: |
    JSON HTTP API for Merchants with an UTRUST store account

    # Authentication

    UTRUST offers JSON Web Tokens (JWT) authentication. We call our resource
    for generating JWT [Sessions](#tag/Session) or [Store
    Sessions](#tag/Store-Session) for the Stores.
    <!-- ReDoc-Inject: <security-definitions> -->
  version: 1.0.0
  title: UTRUST Merchant API
  contact:
    email: apiteam@utrust.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://s2.coinmarketcap.com/static/img/coins/200x200/2320.png'
externalDocs:
  description: Check out the repo
  url: 'https://github.com/utrustdev/merchant-api-spec'
produces:
  - application/vnd.api+json
consumes:
  - application/vnd.api+json
tags:
  - name: Store Order
  - name: Store Session
  - name: Session
  - name: Account
  - name: Payment
  - name: Order
  - name: MultiFactor
x-tagGroups:
  - name: Stores API
    tags:
      - Store Order
      - Store Session
  - name: Authentication
    tags:
      - Session
      - Account
      - MultiFactor
  - name: Orders
    tags:
      - Order
securityDefinitions:
  JWT:
    type: apiKey
    in: header
    name: 'Authorization: Bearer <token>'
    description: You can create a JSON Web Token (JWT) via our Sessions resource
security:
  - JWT: []
paths:
  /multi_factor_auth/tfa_activation:
    post:
      tags:
        - MultiFactor
      summary: Requests the activation for a user
      operationId: multiFactorActivate
      parameters:
        - in: body
          name: tfa_activation
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - tfa_activation
                  attributes:
                    type: object
                    properties:
                      code:
                        type: string
                        example: '123456'
      responses:
        '200':
          description: Multi factor activated
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - tfa_activation
                  id:
                    allOf:
                      - $ref: '#/definitions/UUID'
                    description: The user uuid
  '/multi_factor_auth/tfa_activation/{user_id}':
    delete:
      tags:
        - MultiFactor
      summary: Requests the deactivation for a user
      operationId: multiFactorDeactivate
      parameters:
        - in: path
          name: user_id
          type: string
          format: UUID
          required: true
        - in: body
          name: tfa_activation
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - tfa_activation
                  attributes:
                    type: object
                    properties:
                      code:
                        type: string
                        example: '123456'
      responses:
        '200':
          description: Multi factor activated
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - tfa_activation
                  id:
                    allOf:
                      - $ref: '#/definitions/UUID'
                    description: The user uuid
  /multi_factor_auth/tfa_secret:
    post:
      tags:
        - MultiFactor
      summary: Requests the secret for a user
      description: 'Requests the generation of a Time-based One Time Password (secret) for the user, including a URI to be included in a QR code'
      operationId: multiFactorGenerateSecret
      parameters:
        - in: body
          name: tfa_secret
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - tfa_secret
      responses:
        '200':
          description: Secret generated
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - tfa_secret
                  id:
                    allOf:
                      - $ref: '#/definitions/UUID'
                    description: The user uuid
                  attributes:
                    type: object
                    properties:
                      secret:
                        type: string
                        example: 407c1e588e224ce48ff4caf2e2525742
                      key_uri:
                        type: string
                        description: URI to be embedded into a QR code
                        example: otpauth%3A%2F%2Ftotp%2FUTRUST%3Abraeden1983%40lueilwitz.org%3Fissuer%3DUTRUST%26secret%3DGQYDOYZRMU2TQODFGIZDIY3FGQ4GMZRUMNQWMMTFGI2TENJXGQZA
                      recovery_code:
                        type: string
                        description: A code to be given to user so that they can later recover the account if the secret is lost
                        example: c2f7a15dc34c4c1f8818094741c6aa78
  '/multi_factor_auth/tfa_secret/{user_id}':
    post:
      tags:
        - MultiFactor
      summary: Regenerate all the 2FA credentials
      description: To be used when the user can't generate a 2FA code. Will disable 2FA and request re-activation.
      operationId: multiFactorRegenerateSecret
      parameters:
        - in: body
          name: tfa_secret
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - tfa_secret
                  id:
                    allOf:
                      - $ref: '#/definitions/UUID'
                    description: The user uuid
                  attributes:
                    type: object
                    properties:
                      recovery_code:
                        type: string
                        example: c2f7a15dc34c4c1f8818094741c6aa78
      responses:
        '200':
          description: Secret generated
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - tfa_secret
                  id:
                    allOf:
                      - $ref: '#/definitions/UUID'
                    description: The user uuid
                  attributes:
                    type: object
                    properties:
                      secret:
                        type: string
                        example: 407c1e588e224ce48ff4caf2e2525742
                      key_uri:
                        type: string
                        description: URI to be embedded into a QR code
                        example: otpauth%3A%2F%2Ftotp%2FUTRUST%3Abraeden1983%40lueilwitz.org%3Fissuer%3DUTRUST%26secret%3DGQYDOYZRMU2TQODFGIZDIY3FGQ4GMZRUMNQWMMTFGI2TENJXGQZA
                      recovery_code:
                        type: string
                        description: A code to be given to user so that they can later recover the account if the secret is lost
                        example: c2f7a15dc34c4c1f8818094741c6aa78
  /orders:
    get:
      tags:
        - Order
      summary: List orders for all the merchant's stores
      operationId: listOrders
      parameters:
        - in: query
          name: cursor
          description: Specifies where to start fetching data from
          type: string
        - in: query
          name: limit
          description: The maximum number of results to return per call
          type: integer
          minimum: 1
          maximum: 100
          default: 100
        - in: query
          name: include
          type: string
          enum:
            - payment
      responses:
        '200':
          description: List of orders for merchant
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  - $ref: '#/definitions/Order'
  '/orders/{order_id}':
    get:
      tags:
        - Order
      summary: Show order details
      operationId: showOrderDetails
      parameters:
        - in: path
          name: order_id
          type: string
          format: UUID
          required: true
        - in: query
          name: include
          type: string
          enum:
            - payments
      responses:
        '200':
          description: Order details
          schema:
            type: object
            properties:
              data:
                $ref: '#/definitions/Order'
        '404':
          description: Order not found
          schema:
            $ref: '#/definitions/Error'
  /sign_in:
    post:
      tags:
        - Session
      summary: Generate a valid token for this session
      description: |
        Use your credentials to generate a JWT that you will
        need to perform any authenticated request on the API
      operationId: generateToken
      parameters:
        - in: body
          name: credentials
          description: Your UTRUST credentials
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - session
                  attributes:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                      password:
                        type: string
      responses:
        '200':
          description: Token generated
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: Invalid credentials
          schema:
            $ref: '#/definitions/Error'
  /sign_out:
    delete:
      tags:
        - Session
      summary: Revokes the token for the current session
      operationId: revokeToken
      responses:
        '200':
          description: Token revoked
  /sign_up:
    post:
      tags:
        - Account
      summary: Creates an account
      description: |
        Provide details in order to create a merchant account
      operationId: createAccount
      parameters:
        - in: body
          name: credentials
          description: Credentials you choose to be used on your account
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - account
                  attributes:
                    type: object
                    properties:
                      email:
                        type: string
                        format: email
                      password:
                        type: string
                      organization_name:
                        type: string
      responses:
        '200':
          description: Account created
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  id:
                    $ref: '#/definitions/UUID'
                  type:
                    type: string
                    enum:
                      - merchants
                  attributes:
                    type: object
        '400':
          description: Invalid credentials
          schema:
            $ref: '#/definitions/Error'
  /stores/orders:
    post:
      tags:
        - Store Order
      summary: Create an order
      description: Create a new order for payment processing. Returns a url to a page where a buyer can fulfill the payment for that order.
      operationId: createOrder
      parameters:
        - in: body
          name: order
          description: The order information
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - orders
                  attributes:
                    type: object
                    properties:
                      order:
                        $ref: '#/definitions/OrderInput'
                      customer:
                        $ref: '#/definitions/Customer'
      responses:
        '201':
          description: Order created
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - orders_redirect
                  id:
                    allOf:
                      - $ref: '#/definitions/UUID'
                  attributes:
                    type: object
                    properties:
                      redirect_url:
                        type: string
                        format: URL
                        example: 'https://buyers.utrust.com?uuid=some-uuid'
  /stores/session:
    post:
      tags:
        - Store Session
      summary: Generate a valid token for this session
      description: |
        Use your credentials to generate a JWT that you will
        need to perform any authenticated request on the API
      operationId: generateStoreToken
      parameters:
        - in: body
          name: credentials
          description: Your UTRUST credentials
          required: true
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - session
                  attributes:
                    type: object
                    properties:
                      client_id:
                        type: string
                      client_secret:
                        type: string
      responses:
        '200':
          description: Token generated
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: Invalid credentials
          schema:
            $ref: '#/definitions/Error'
definitions:
  Amount:
    type: object
    properties:
      total:
        type: string
        format: decimal
        example: '40.00'
      currency:
        type: string
        example: USD
      details:
        type: object
        description: |
          Additional details about the amount
        properties:
          subtotal:
            type: string
            format: decimal
            example: '39.00'
          handling_fee:
            type: string
            format: decimal
            example: '1.00'
  Currency:
    type: object
    properties:
      value:
        type: string
        format: decimal
        example: '40.00'
      currency:
        type: string
        example: USD
  Customer:
    type: object
    properties:
      first_name:
        type: string
        example: John
      last_name:
        type: string
        example: Doe
      email:
        type: string
        format: email
        example: john@example.com
      address1:
        type: string
        example: 118 Main St
      address2:
        type: string
        example: 7th Floor
      city:
        type: string
        example: New York
      state:
        type: string
        example: New York
      postcode:
        type: string
        example: '10001'
      country:
        type: string
        example: US
  Error:
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          properties:
            detail:
              type: string
              description: Human readable explanation of the problem
              example: Explanation of the problem
  OrderInput:
    type: object
    properties:
      reference:
        type: string
        example: order-1
      amount:
        allOf:
          - $ref: '#/definitions/Amount'
        example:
          total: '100.00'
          currency: USD
          details:
            subtotal: '98.00'
            handling_fee: '2.00'
      return_urls:
        type: object
        description: |
          If not using the express checkout flow you can specify a URL
          to redirect the user when the payment is done
        properties:
          return_url:
            type: string
            description: (required) URL to redirect the user in case of everything going well
            required: true
            format: url
            example: 'http://example.com/return'
          cancel_url:
            type: string
            description: URL to redirect the user in case of something going wrong
            format: url
            example: 'http://example.com/cancel'
          callback_url:
            type: string
            description: URL to POST information to when the payment is confirmed
            format: url
            example: 'http://example.com/callback'
      line_items:
        type: array
        items:
          $ref: '#/definitions/LineItem'
  LineItem:
    type: object
    properties:
      sku:
        type: string
      name:
        type: string
      price:
        type: integer
        example: 100
      currency:
        type: string
        example: USD
      quantity:
        type: integer
        minimum: 1
        example: 1
  Order:
    type: object
    properties:
      id:
        allOf:
          - $ref: '#/definitions/UUID'
      type:
        type: string
        enum:
          - orders
      attributes:
        type: object
        properties:
          status:
            type: string
            enum:
              - pending
              - paid
          created_at:
            type: string
            format: date-time
            example: '2018-04-26T12:48:11.954503'
          total_amount:
            allOf:
              - $ref: '#/definitions/Currency'
          customer:
            $ref: '#/definitions/Customer'
          merchant_uuid:
            allOf:
              - $ref: '#/definitions/UUID'
          items:
            type: array
            items:
              $ref: '#/definitions/LineItem'
  PartnerFeeDetails:
    type: object
    properties:
      receiver:
        type: string
        enum:
          - utrust
        example: utrust
      amount:
        type: object
        properties:
          total:
            type: string
            format: decimal
            example: '0.000943775'
          currency:
            type: string
            example: ETH
  Payment:
    type: object
    properties:
      id:
        allOf:
          - $ref: '#/definitions/UUID'
      type:
        type: string
        enum:
          - payments
      attributes:
        type: object
        properties:
          state:
            type: string
            enum:
              - confirmed
              - rejected
              - expired
          source:
            type: object
            properties:
              type:
                type: string
                enum:
                  - order
              id:
                allOf:
                  - $ref: '#/definitions/UUID'
          payer:
            type: object
            properties:
              payment_method:
                type: string
                enum:
                  - utrust
                  - blockchain
          total_amount:
            allOf:
              - $ref: '#/definitions/Currency'
          transactions:
            type: array
            items:
              $ref: '#/definitions/PaymentTransaction'
  PaymentTransaction:
    type: object
    properties:
      payee:
        type: string
        enum:
          - merchant
        example: merchant
      received_amount:
        $ref: '#/definitions/Amount'
      paid_amount:
        allOf:
          - $ref: '#/definitions/Amount'
        example:
          total: '0.094377463'
          currency: ETH
          details:
            subtotal: '0.092018026'
            handling_fee: '0.002359437'
      partner_fee_details:
        $ref: '#/definitions/PartnerFeeDetails'
      exchange_rate:
        type: string
        example: '423.83000000'
      description:
        type: string
        example: The payment transaction description.
  Token:
    type: object
    properties:
      data:
        type: object
        properties:
          type:
            type: string
            enum:
              - session
          id:
            type: string
            format: JWT
          attributes:
            type: object
            properties:
              token:
                type: string
                format: JWT
  UUID:
    type: string
    format: UUID
    example: c8d65cc2-0c82-429a-95ea-3f65011fc2cc
