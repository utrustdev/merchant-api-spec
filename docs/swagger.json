{
  "swagger": "2.0",
  "schemes": [
    "https"
  ],
  "host": "utrust.com",
  "basePath": "/api",
  "info": {
    "description": "JSON HTTP API for Merchants with an UTRUST store account\n\n# Authentication\n\nUTRUST offers JSON Web Tokens (JWT) authentication.  We call our resource\nfor generating JWT [Sessions](#tag/Session).\n",
    "version": "1.0.0",
    "title": "UTRUST Merchant API",
    "contact": {
      "email": "apiteam@utrust.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "x-logo": {
      "url": "https://s2.coinmarketcap.com/static/img/coins/200x200/2320.png"
    }
  },
  "externalDocs": {
    "description": "Check out the repo",
    "url": "https://github.com/utrustdev/merchant-api-spec"
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Order"
    },
    {
      "name": "Session"
    },
    {
      "name": "Payment"
    }
  ],
  "x-tagGroups": [
    {
      "name": "Orders API",
      "tags": [
        "Order"
      ]
    },
    {
      "name": "Payments API",
      "tags": [
        "Payment"
      ]
    },
    {
      "name": "Authentication API",
      "tags": [
        "Session"
      ]
    }
  ],
  "securityDefinitions": {
    "JWT": {
      "description": "You can create a JSON Web Token (JWT) via our Sessions resource",
      "type": "basic"
    }
  },
  "security": [
    {
      "JWT": []
    }
  ],
  "paths": {
    "/orders": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create an order",
        "description": "Create a new order for payment processing. Returns a url to a page where a buyer can fulfill the payment for that order.",
        "operationId": "createOrder",
        "parameters": [
          {
            "in": "body",
            "name": "order",
            "description": "The order information",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "order": {
                  "$ref": "#/definitions/Order"
                },
                "payment": {
                  "type": "object",
                  "properties": {
                    "currency": {
                      "type": "string",
                      "example": "UTK"
                    }
                  }
                },
                "customer": {
                  "$ref": "#/definitions/Customer"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Order created"
          }
        }
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "List payments",
        "description": "List payments that were created after an order has been fullfilled. This list shows the payments that are made to the merchant who makes the call.",
        "operationId": "listPayments",
        "parameters": [
          {
            "in": "query",
            "name": "count",
            "type": "integer",
            "maximum": 20,
            "default": 10,
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "List of payments for merchant",
            "schema": {
              "$ref": "#/definitions/Payments"
            }
          }
        }
      }
    },
    "/payments/{payment_id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Show payment details",
        "description": "Show details for a payment by ID",
        "operationId": "showPaymentDetails",
        "parameters": [
          {
            "in": "path",
            "name": "payment_id",
            "type": "string",
            "format": "UUID",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Payment details",
            "schema": {
              "$ref": "#/definitions/Payment"
            }
          },
          "404": {
            "description": "Payment not found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Generate a valid token for this session",
        "description": "Use your credentials to generate a JWT that you will\nneed to perform any authenticated request on the API\n",
        "operationId": "generateToken",
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "description": "Your UTRUST credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "client_id": {
                  "type": "string"
                },
                "client_secret": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token generated",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string",
                  "format": "JWT"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Amount": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "decimal",
          "example": "40.00"
        },
        "currency": {
          "type": "string",
          "example": "USD"
        },
        "details": {
          "type": "object",
          "properties": {
            "subtotal": {
              "type": "string",
              "format": "decimal",
              "example": "39.00"
            },
            "handling_fee": {
              "type": "string",
              "format": "decimal",
              "example": "1.00"
            }
          }
        }
      }
    },
    "Currency": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "decimal",
          "example": "40.00"
        },
        "currency": {
          "type": "string",
          "example": "USD"
        }
      }
    },
    "Customer": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string",
          "example": "John"
        },
        "last_name": {
          "type": "string",
          "example": "Doe"
        },
        "email": {
          "type": "string",
          "format": "email",
          "example": "john@example.com"
        },
        "address1": {
          "type": "string",
          "example": "118 Main St"
        },
        "address2": {
          "type": "string",
          "example": "7th Floor"
        },
        "city": {
          "type": "string",
          "example": "New York"
        },
        "state": {
          "type": "string",
          "example": "New York"
        },
        "postcode": {
          "type": "string",
          "example": "10001"
        },
        "country": {
          "type": "string",
          "example": "US"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "object",
          "properties": {
            "detail": {
              "type": "string",
              "description": "Human readable explanation of the problem",
              "example": "Explanation of the problem"
            }
          }
        }
      }
    },
    "LineItem": {
      "type": "object",
      "properties": {
        "sku": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "example": 100
        },
        "currency": {
          "type": "string",
          "example": "USD"
        },
        "quantity": {
          "type": "integer",
          "minimum": 1,
          "example": 1
        }
      }
    },
    "Order": {
      "type": "object",
      "properties": {
        "reference": {
          "type": "string",
          "example": "order-1"
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        },
        "total": {
          "type": "integer",
          "minimum": 0,
          "example": 100
        },
        "return_urls": {
          "type": "object",
          "properties": {
            "return_url": {
              "type": "string",
              "format": "url",
              "example": "http://example.com/return"
            },
            "cancel_url": {
              "type": "string",
              "format": "url",
              "example": "http://example.com/cancel"
            }
          }
        },
        "line_items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LineItem"
          }
        }
      }
    },
    "PartnerFeeDetails": {
      "type": "object",
      "properties": {
        "receiver": {
          "type": "string",
          "enum": [
            "utrust"
          ],
          "example": "utrust"
        },
        "amount": {
          "type": "object",
          "properties": {
            "total": {
              "type": "string",
              "format": "decimal",
              "example": "0.40"
            },
            "currency": {
              "type": "string",
              "example": "USD"
            }
          }
        }
      }
    },
    "Payment": {
      "type": "object",
      "properties": {
        "id": {
          "allOf": [
            {
              "$ref": "#/definitions/UUID"
            }
          ]
        },
        "state": {
          "type": "string",
          "enum": [
            "confirmed",
            "rejected",
            "expired"
          ]
        },
        "source": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "order"
              ]
            },
            "id": {
              "allOf": [
                {
                  "$ref": "#/definitions/UUID"
                }
              ]
            }
          }
        },
        "payer": {
          "type": "object",
          "properties": {
            "payment_method": {
              "type": "string",
              "enum": [
                "utrust",
                "blockchain"
              ]
            }
          }
        },
        "total_amount": {
          "allOf": [
            {
              "$ref": "#/definitions/Currency"
            }
          ]
        },
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentTransaction"
          }
        }
      }
    },
    "Payments": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Payment"
      }
    },
    "PaymentTransaction": {
      "type": "object",
      "properties": {
        "payee": {
          "type": "string",
          "enum": [
            "merchant"
          ],
          "example": "merchant"
        },
        "amount": {
          "$ref": "#/definitions/Amount"
        },
        "partner_fee_details": {
          "$ref": "#/definitions/PartnerFeeDetails"
        },
        "description": {
          "type": "string",
          "example": "The payment transaction description."
        }
      }
    },
    "UUID": {
      "type": "string",
      "format": "UUID",
      "example": "c8d65cc2-0c82-429a-95ea-3f65011fc2cc"
    }
  }
}
